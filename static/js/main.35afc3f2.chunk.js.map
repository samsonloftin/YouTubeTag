{"version":3,"sources":["data.js","App.js","index.js"],"names":["Data","youTube","id","hashtag","followTitle","youTubeSocial","url","App","props","titlesTags","title","sLabelNew","epLabelNew","episode","mediaType","reactionTags","season","epLabel","sLabel","altEpisode","altTitle","displayTagsOverflow","overflowTags","displayTags","tagArray","altEpLabelNew","tag01","tag03","tag02","tag04","findDupes","overflowTagArray","index","undefined","toLowerCase","split","Set","toString","length","push","splice","innerHTML","style","display","videoTitle","youtubeTitle","captialTitle","replace","w","c","toUpperCase","description","youtubeTimecode","playlist","noSpaceTitle","youtubeTimecodeNew","state","youTubeHashtag","youTubeFollow","youtubeTag","document","getElementById","value","displayDesc","displayTitle","results","addEventListener","event","a","navigator","clipboard","text","target","innerText","writeText","textContent","console","error","episodeLabel","seasonLabel","mediaTitle","isThisAnime","altepisode","timecode","window","scrollTo","select","this","setState","className","href","onClick","updatePage","htmlFor","type","name","min","cols","rows","Component","ReactDOM","render","basename"],"mappings":"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","file":"static/js/main.35afc3f2.chunk.js","sourcesContent":["export const Data = {\r\n    youTube: {\r\n        id: \"Post-TimeSkip Sam\",\r\n        hashtag: \"#MoreSamsonReactions\",\r\n        followTitle: \"Keep Update To Date\",\r\n    },\r\n    youTubeSocial: [\r\n        {\r\n            id: \"Anime Reactions\",\r\n            url: \"https://ANIMEREACTIONS.saml.me\",\r\n        },\r\n        {\r\n            id: \"Main Channel (Gaming/Anime)\",\r\n            url: \"https://YOUTUBE.saml.me\",\r\n        },\r\n        {\r\n            id: \"Twitter\",\r\n            url: \"https://TWITTER.saml.me\",\r\n        },\r\n        {\r\n            id: \"Instagram\",\r\n            url: \"https://INSTAGRAM.saml.me\",\r\n        },\r\n        {\r\n            id: \"Twitch\",\r\n            url: \"https://TWITCH.saml.me\",\r\n        },\r\n\r\n    ],\r\n};","import React, { Component } from \"react\";\r\nimport { Data } from \"./data\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n      isThisAnime: \"Yes\",\r\n\r\n      // Labels\r\n      mediaTitle: \"Anime\",\r\n      episodeLabel: \"Episode\",\r\n      seasonLabel: \"Season\",\r\n\r\n      // The Form\r\n      altTitle: \"\",\r\n      episode: \"\",\r\n      altepisode: \"\",\r\n      season: \"\",\r\n      playlist: \"\",\r\n      timecode: \"\",\r\n\r\n      // Samson\r\n      youTubeHashtag: Data.youTube.hashtag,\r\n      youTubeSocial: Data.youTubeSocial,\r\n      youTubeFollow: Data.youTube.followTitle,\r\n\r\n    };\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  updatePage(select) {\r\n    if (select === \"Yes\") {\r\n      this.setState(state => ({\r\n        isThisAnime: select,\r\n        mediaTitle: \"Anime\",\r\n        episodeLabel: \"Episode\",\r\n        seasonLabel: \"Season\",\r\n      }))\r\n    } else if (select === \"No\") {\r\n      this.setState(state => ({\r\n        isThisAnime: select,\r\n        mediaTitle: \"Manga\",\r\n        episodeLabel: \"Chapter\",\r\n        seasonLabel: \"Volume\",\r\n      }))\r\n    } else {\r\n      /*\r\n      this.setState(state => ({\r\n        isThisAnime: select,\r\n        mediaTitle: \"Games\",\r\n      }))\r\n      */\r\n    }\r\n  }\r\n\r\n  titlesTags = (title, sLabelNew, epLabelNew, episode, mediaType) => {\r\n    return (\r\n      [\r\n        title + \",\" +\r\n        title + \" \" + mediaType + \" reaction,\" +\r\n        title + sLabelNew + \" reaction,\" +\r\n        title + sLabelNew + epLabelNew + \" reaction,\"\r\n      ]\r\n    )\r\n  }\r\n\r\n  reactionTags = (title, season, episode, epLabel, sLabel, mediaType, altEpisode, altTitle, displayTagsOverflow, overflowTags, displayTags) => {\r\n    let sLabelNew = \"\";\r\n    let epLabelNew = \"\";\r\n    let altEpLabelNew = \"\";\r\n    let tag01 = \"\";\r\n    let tag03 = \"\";\r\n    let tag02 = \"\";\r\n    let tag04 = \"\";\r\n    let tagSum = \"\";\r\n    let tagArray = [];\r\n    let findDupes = [];\r\n    let overflowTagArray = [];\r\n    let index = 0;\r\n\r\n    if (season === 0 || season === undefined || season === \"0\") {\r\n      sLabelNew = \"\";\r\n    } else if (season >= 1) {\r\n      sLabelNew = \" \" + sLabel.toLowerCase() + \" \" + season;\r\n    }\r\n\r\n    if (episode === 0 || episode === undefined || episode === \"0\") {\r\n      epLabelNew = \"\";\r\n    } else if (episode >= 1) {\r\n      epLabelNew = \" \" + epLabel.toLowerCase() + \" \" + episode;\r\n    }\r\n\r\n    if (altEpisode === 0 || altEpisode === undefined || altEpisode === \"0\") {\r\n      altEpLabelNew = \"\";\r\n    } else if (altEpisode >= 1) {\r\n      altEpLabelNew = \" \" + epLabel.toLowerCase() + \" \" + altEpisode;\r\n    }\r\n\r\n    if (title === \"\" || title === undefined) {\r\n      return (\"Title Needed\")\r\n    } else {\r\n      tag01 = this.titlesTags(title, sLabelNew, epLabelNew, episode, mediaType.toLowerCase());\r\n      tag02 = this.titlesTags(title, \"\", altEpLabelNew, altEpisode, mediaType.toLowerCase());\r\n    }\r\n\r\n    if (altTitle === \"\" || altTitle === undefined || altTitle === 0) {\r\n      tag03 = \"\";\r\n      tag04 = \"\";\r\n    } else {\r\n      tag03 = this.titlesTags(altTitle.toLowerCase(), sLabelNew, epLabelNew, episode, mediaType.toLowerCase());\r\n      tag04 = this.titlesTags(altTitle.toLowerCase(), \"\", altEpLabelNew, altEpisode, mediaType.toLowerCase());\r\n    }\r\n\r\n    tagSum = tag01 + tag02 + tag03 + tag04;\r\n\r\n    tagArray = tagSum.split(\",\");\r\n    findDupes = [...new Set(tagArray)];\r\n\r\n    index = findDupes.toString().length\r\n\r\n\r\n    while (index >= 500) {\r\n      overflowTagArray.push(findDupes.splice(-1));\r\n      index -= (overflowTagArray.toString().length);\r\n    }\r\n\r\n\r\n    if (overflowTagArray.toString().length >= 1 ) {\r\n      return (\r\n        (displayTags.innerHTML = findDupes.toString()) +\r\n        (overflowTags.style.display = \"flex\") +\r\n        (displayTagsOverflow.innerHTML = overflowTagArray.toString())\r\n      )\r\n    } else {\r\n      return (displayTags.innerHTML = findDupes.toString())\r\n    }\r\n  }\r\n\r\n  videoTitle = (title, youtubeTitle, episode, season, epLabel, sLabel) => {\r\n    const captialTitle = title.replace(/\\w\\S*/g, (w) => (w.replace(/^\\w/, (c) => c.toUpperCase())));\r\n    let sLabelNew = \"\";\r\n    let epLabelNew = \"\";\r\n\r\n    if (season === 0 || season === undefined || season === \"0\") {\r\n      sLabelNew = \"\";\r\n    } else if (season >= 1) {\r\n      sLabelNew = \" \" + sLabel + \" \" + season;\r\n    }\r\n\r\n    if (episode === 0 || episode === undefined || episode === \"0\") {\r\n      return (\"\");\r\n    } else if (episode >= 1) {\r\n      epLabelNew = \" \" + epLabel + \" \" + episode;\r\n    }\r\n\r\n    return (youtubeTitle + \" - \" + captialTitle + sLabelNew + epLabelNew + \" Reaction\")\r\n  }\r\n\r\n\r\n  description = (title, youtubeTitle, episode, youtubeTimecode, season, playlist, epLabel, sLabel, mediaType, altEpisode) => {\r\n    const captialTitle = title.replace(/\\w\\S*/g, (w) => (w.replace(/^\\w/, (c) => c.toUpperCase())));\r\n    const noSpaceTitle = title.replace(/\\s/g, '');\r\n    let sLabelNew = \"\";\r\n    let epLabelNew = \"\";\r\n    let altEpLabelNew = \"\";\r\n    let youtubeTimecodeNew = \"\";\r\n\r\n    if (season === 0 || season === undefined || season === \"0\") {\r\n      sLabelNew = \"\";\r\n    } else if (season >= 1) {\r\n      sLabelNew = \" \" + sLabel + \" \" + season;\r\n    }\r\n\r\n    if (episode === 0 || episode === undefined || episode === \"0\") {\r\n      return (\"\");\r\n    } else if (episode >= 1) {\r\n      epLabelNew = \" \" + epLabel + \" \" + episode;\r\n    }\r\n\r\n    if (altEpisode === 0 || altEpisode === undefined || altEpisode === \"0\") {\r\n      altEpLabelNew = \"\";\r\n    } else if (altEpisode >= 1) {\r\n      altEpLabelNew = youtubeTitle + \" - \" + captialTitle + \" \" + epLabel.toLowerCase() + \" \" + altEpisode + \" Reaction\";\r\n    }\r\n\r\n    if (youtubeTimecode === undefined || youtubeTimecode === \"\") {\r\n      youtubeTimecodeNew = \"\";\r\n    } else { // eslint-disable-next-line\r\n      youtubeTimecodeNew = \"<br>\" + \"<br>\" + \"Timecodes ⬇️\" + \"<br>\" // eslint-disable-next-line\r\n    }\r\n\r\n\r\n    return (\r\n      youtubeTitle + \" - \" + captialTitle + sLabelNew + epLabelNew + \" Reaction\" + // eslint-disable-next-line\r\n      \"<br>\" + \"<br>\" + captialTitle + sLabelNew + \" \" + mediaType + \" Reactions Playlist - \" + playlist + // eslint-disable-next-line\r\n      \"<br>\" + \"<br>\" + \"#\" + noSpaceTitle + \"reaction \" + \"#\" + noSpaceTitle + sLabelNew.replace(/\\s/g, '') + epLabelNew.replace(/\\s/g, '') + \" \" + // eslint-disable-next-line\r\n      this.state.youTubeHashtag + // eslint-disable-next-line\r\n      \"<br>\" + \"<br>\" + this.state.youTubeFollow + \":\" + // eslint-disable-next-line\r\n      \"<br>\" + this.state.youTubeSocial[0].id + \": \" + this.state.youTubeSocial[0].url + // eslint-disable-next-line\r\n      \"<br>\" + this.state.youTubeSocial[1].id + \": \" + this.state.youTubeSocial[1].url + // eslint-disable-next-line\r\n      \"<br>\" + this.state.youTubeSocial[2].id + \": \" + this.state.youTubeSocial[2].url + // eslint-disable-next-line\r\n      \"<br>\" + this.state.youTubeSocial[3].id + \": \" + this.state.youTubeSocial[3].url + // eslint-disable-next-line\r\n      \"<br>\" + this.state.youTubeSocial[4].id + \": \" + this.state.youTubeSocial[4].url + // eslint-disable-next-line\r\n      youtubeTimecodeNew + // eslint-disable-next-line\r\n      youtubeTimecode\r\n    )\r\n  }\r\n\r\n  youtubeTag = () => {\r\n    let title = document.getElementById(\"title\").value.toLowerCase();\r\n    let altTitle = document.getElementById(\"altTitle\").value.toLowerCase();\r\n    let youtubeTitle = document.getElementById(\"youtubeTitle\").value;\r\n    let episode = document.getElementById(\"episode\").value;\r\n    let altEpisode = document.getElementById(\"altEpisode\").value;\r\n    let youtubeTimecode = document.getElementById(\"youtubeTimecode\").value;\r\n    let season = document.getElementById(\"season\").value;\r\n    let playlist = document.getElementById(\"playlist\").value;\r\n    let displayTags = document.getElementById(\"displayTags\");\r\n    let displayTagsOverflow = document.getElementById(\"displayTagsOverflow\");\r\n    let displayDesc = document.getElementById(\"displayDescription\");\r\n    let displayTitle = document.getElementById(\"displayTitle\");\r\n    let results = document.getElementById(\"results\");\r\n    let overflowTags = document.getElementById(\"overflowTags\");\r\n\r\n    displayTags.addEventListener('click', async event => {\r\n      if (!navigator.clipboard) {\r\n        // Clipboard API not available\r\n        return\r\n      }\r\n      const text = event.target.innerText\r\n      try {\r\n        await navigator.clipboard.writeText(text)\r\n        event.target.textContent = 'Copied to clipboard'\r\n      } catch (err) {\r\n        console.error('Failed to copy!', err)\r\n      }\r\n    })\r\n\r\n    displayDesc.addEventListener('click', async event => {\r\n      if (!navigator.clipboard) {\r\n        // Clipboard API not available\r\n        return\r\n      }\r\n      const text = event.target.innerText\r\n      try {\r\n        await navigator.clipboard.writeText(text)\r\n        event.target.textContent = 'Copied to clipboard'\r\n      } catch (err) {\r\n        console.error('Failed to copy!', err)\r\n      }\r\n    })\r\n\r\n    displayTitle.addEventListener('click', async event => {\r\n      if (!navigator.clipboard) {\r\n        // Clipboard API not available\r\n        return\r\n      }\r\n      const text = event.target.innerText\r\n      try {\r\n        await navigator.clipboard.writeText(text)\r\n        event.target.textContent = 'Copied to clipboard'\r\n      } catch (err) {\r\n        console.error('Failed to copy!', err)\r\n      }\r\n    })\r\n\r\n    results.style.display = \"flex\";\r\n    overflowTags.style.display = \"none\";\r\n\r\n    return (\r\n      this.reactionTags(title, season, episode, this.state.episodeLabel, this.state.seasonLabel, this.state.mediaTitle, altEpisode, altTitle, displayTagsOverflow, overflowTags, displayTags),\r\n      displayTitle.innerHTML = this.videoTitle(title, youtubeTitle, episode, season, this.state.episodeLabel, this.state.seasonLabel),\r\n      displayDesc.innerHTML = this.description(title, youtubeTitle, episode, youtubeTimecode, season, playlist, this.state.episodeLabel, this.state.seasonLabel, this.state.mediaTitle, altEpisode)\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"header\">\r\n          <div className=\"header-title\">YouTube Metadata Creator</div>\r\n          <div className=\"header-subtitle\">Created by <a href=\"https://www.samsonloftin.com/\">Post-TimeSkip Sam</a></div>\r\n          <div className=\"header-nav\">\r\n            <div className=\"header-links\" onClick={() => this.updatePage(\"Yes\")}>Anime</div>\r\n            <div className=\"header-links\" onClick={() => this.updatePage(\"No\")}>Manga</div>\r\n            {/* <div className=\"header-links\" onClick={() => this.updatePage(\"Games\")}>Games</div>*/}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-container\">\r\n\r\n          {/* TITLE OF MEDIA */}\r\n          <div className=\"form-section\">\r\n            <label htmlFor=\"title\">{this.state.mediaTitle} Title</label>\r\n            <input type=\"text\" id=\"title\" name=\"title\" />\r\n          </div>\r\n\r\n\r\n          {/* ALTERNATIVE TITLE OF MEDIA */}\r\n          <div className=\"form-section\">\r\n            <label htmlFor=\"altTitle\">Alternative {this.state.mediaTitle} Title</label>\r\n            <input type=\"text\" id=\"altTitle\" name=\"altTitle\" />\r\n          </div>\r\n\r\n          {/* YOUTUBE TITLE */}\r\n          <div className=\"form-section\">\r\n            <label htmlFor=\"youtubeTitle\">YouTube Title</label>\r\n            <input type=\"text\" id=\"youtubeTitle\" name=\"youtubeTitle\" />\r\n          </div>\r\n\r\n          {/* Episode TITLE */}\r\n          <div className=\"form-three-section\">\r\n            <div className=\"form-section-three\">\r\n              <label htmlFor=\"episode\">{this.state.episodeLabel} #</label>\r\n              <input type=\"number\" id=\"episode\" name=\"episode\" min=\"0\" />\r\n            </div>\r\n\r\n            {/* ALT EP TITLE */}\r\n            <div className=\"form-section-three\">\r\n              <label htmlFor=\"altEpisode\">Alt {this.state.episodeLabel} #</label>\r\n              <input type=\"number\" id=\"altEpisode\" name=\"altEpisode\" min=\"0\" />\r\n            </div>\r\n\r\n            {/* SEASON TITLE */}\r\n            <div className=\"form-section-three\">\r\n              <label htmlFor=\"season\">{this.state.seasonLabel} #</label>\r\n              <input type=\"number\" id=\"season\" name=\"season\" min=\"0\" />\r\n            </div>\r\n\r\n            {/* Playlist TITLE */}\r\n            <div className=\"form-section-three\">\r\n              <label htmlFor=\"playlist\">YouTube Playlist</label>\r\n              <input type=\"text\" id=\"playlist\" name=\"playlist\" min=\"0\" />\r\n            </div>\r\n\r\n            {/* TIMECODE TITLE */}\r\n            <div className=\"form-section\">\r\n              <label htmlFor=\"youtubeTimecode\">Timecodes</label>\r\n              <textarea cols=\"50\" rows=\"5\" id=\"youtubeTimecode\" name=\"youtubeTimecode\" />\r\n            </div>\r\n\r\n            <div className=\"form-section\" id=\"form-submit\">\r\n              <input className=\"submit\" type=\"button\" onClick={() => this.youtubeTag()} value=\"Submit\" />\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-container\" id=\"results\">\r\n          {/* TITLE */}\r\n          <div className=\"form-section\">\r\n            <label>Video Title - Click below to Copy</label>\r\n            <div className=\"display\" id=\"displayTitle\" />\r\n          </div>\r\n\r\n          {/* DESCRIPTION TITLE */}\r\n          <div className=\"form-section\">\r\n            <label>Description - Click below to Copy</label>\r\n            <div className=\"display\" id=\"displayDescription\" />\r\n          </div>\r\n\r\n          {/* TAGS TITLE */}\r\n          <div className=\"form-section\">\r\n            <label>Tags - Click below to Copy</label>\r\n            <div className=\"display\" id=\"displayTags\" />\r\n          </div>\r\n\r\n          {/* TAGS OVERFLOW */}\r\n          <div className=\"form-section\" id=\"overflowTags\">\r\n            <label>Tags Overflow</label>\r\n            <label>For tags that don't fit within YouTube's 500 character limit</label>\r\n            <div className=\"display\" id=\"displayTagsOverflow\" />\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename='/'>\r\n    <App />\r\n  </BrowserRouter>, document.getElementById('root'));"],"sourceRoot":""}