{"version":3,"sources":["data.js","App.js","index.js"],"names":["Data","youTube","id","hashtag","followTitle","youTubeSocial","url","App","props","titlesTags","title","sLabelNew","epLabelNew","episode","reactionTags","season","epLabel","sLabel","undefined","toLowerCase","description","youtubeTitle","youtubeTimecode","playlist","captialTitle","replace","w","c","toUpperCase","noSpaceTitle","youtubeTimecodeNew","state","youTubeHashtag","youTubeFollow","youtubeTag","document","getElementById","value","altTitle","altEpisode","displayTags","displayDesc","addEventListener","event","a","navigator","clipboard","text","target","innerText","writeText","textContent","console","error","innerHTML","episodeLabel","seasonLabel","isThisAnime","mediaTitle","altepisode","timecode","window","scrollTo","select","this","setState","className","href","onClick","updatePage","htmlFor","type","name","min","cols","rows","Component","ReactDOM","render","basename"],"mappings":"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","file":"static/js/main.c1a5060f.chunk.js","sourcesContent":["export const Data = {\r\n    youTube: {\r\n        id: \"Post-TimeSkip Sam\",\r\n        hashtag: \"#MoreSamsonReactions\",\r\n        followTitle: \"Follow\",\r\n    },\r\n    youTubeSocial: [\r\n        {\r\n            id: \"Anime Reactions\",\r\n            url: \"https://ANIMEREACTIONS.saml.me\",\r\n        },\r\n        {\r\n            id: \"Main Channel (Gaming/Anime)\",\r\n            url: \"https://YOUTUBE.saml.me\",\r\n        },\r\n        {\r\n            id: \"Twitter\",\r\n            url: \"https://TWITTER.saml.me\",\r\n        },\r\n        {\r\n            id: \"Instagram\",\r\n            url: \"https://INSTAGRAM.saml.me\",\r\n        },\r\n        {\r\n            id: \"Twitch\",\r\n            url: \"https://TWITCH.saml.me\",\r\n        },\r\n\r\n    ],\r\n};","import React, { Component } from \"react\";\nimport { Data } from \"./data\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n      isThisAnime: \"Yes\",\n\n      // Labels\n      mediaTitle: \"Anime\",\n      episodeLabel: \"Episode\",\n      seasonLabel: \"Season\",\n\n      // The Form\n      altTitle: \"\",\n      episode: \"\",\n      altepisode: \"\",\n      season: \"\",\n      playlist: \"\",\n      timecode: \"\",\n\n      // Samson\n      youTubeHashtag: Data.youTube.hashtag,\n      youTubeSocial: Data.youTubeSocial,\n      youTubeFollow: Data.youTube.followTitle,\n\n    };\n\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  componentDidUpdate() {\n    window.scrollTo(0, 0);\n  }\n\n  updatePage(select) {\n    if (select === \"Yes\") {\n      this.setState(state => ({\n        isThisAnime: select,\n        mediaTitle: \"Anime\",\n        episodeLabel: \"Episode\",\n        seasonLabel: \"Season\",\n      }))\n    } else if (select === \"No\") {\n      this.setState(state => ({\n        isThisAnime: select,\n        mediaTitle: \"Manga\",\n        episodeLabel: \"Chapter\",\n        seasonLabel: \"Volume\",\n      }))\n    } else {\n      /*\n      this.setState(state => ({\n        isThisAnime: select,\n        mediaTitle: \"Games\",\n      }))\n      */\n    }\n  }\n\n  titlesTags = (title, sLabelNew, epLabelNew, episode) => {\n    return (\n      title + \", \" +\n      title + \" reaction, \" +\n      title + sLabelNew + epLabelNew + \", \" +\n      title + sLabelNew + epLabelNew + \" reaction, \" +\n      title + sLabelNew + \" \" + episode + \" reaction, \" +\n      title + sLabelNew + \", \" +\n      title + sLabelNew + \" reaction, \"\n    )\n  }\n\n  reactionTags = (title, season, episode, epLabel, sLabel) => {\n    let sLabelNew = \"\";\n    let epLabelNew = \"\";\n\n    if (season === 0 || season === undefined || season === \"0\") {\n      sLabelNew = \"\";\n    } else if (season >= 1) {\n      sLabelNew = \" \" + sLabel.toLowerCase() + \" \" + season;\n    }\n\n    if (episode === 0 || episode === undefined || episode === \"0\") {\n      return (\"\");\n    } else if (episode >= 1) {\n      epLabelNew = \" \" + epLabel.toLowerCase() + \" \" + episode;\n    }\n\n\n    if (title === \"\" || title === undefined) {\n      return (\"\")\n    } else {\n      epLabelNew = \" \" + epLabel.toLowerCase() + \" \" + episode;\n      return (this.titlesTags(title, sLabelNew, epLabelNew, episode))\n    }\n  }\n\n  description = (title, youtubeTitle, episode, youtubeTimecode, season, playlist, epLabel, sLabel) => {\n    const captialTitle = title.replace(/\\w\\S*/g, (w) => (w.replace(/^\\w/, (c) => c.toUpperCase())));\n    const noSpaceTitle = title.replace(/\\s/g, '');\n    let sLabelNew = \"\";\n    let epLabelNew = \"\";\n    let youtubeTimecodeNew = \"\";\n\n    if (season === 0 || season === undefined || season === \"0\") {\n      sLabelNew = \"\";\n    } else if (season >= 1) {\n      sLabelNew = \" \" + sLabel + \" \" + season;\n    }\n\n    if (episode === 0 || episode === undefined || episode === \"0\") {\n      return (\"\");\n    } else if (episode >= 1) {\n      epLabelNew = \" \" + epLabel + \" \" + episode;\n    }\n\n    if (youtubeTimecode === undefined || youtubeTimecode === \"\") {\n      youtubeTimecodeNew = \"\";\n    } else { // eslint-disable-next-line\n      youtubeTimecodeNew = \"<br>\" + \"<br>\" + \"Timecodes ⬇️\" + \"<br>\" // eslint-disable-next-line\n    }\n\n    return (\n      youtubeTitle + \" - \" + captialTitle + sLabelNew + \" \" + epLabelNew + \" Reaction\" + // eslint-disable-next-line\n      \"<br>\" + \"<br>\" + captialTitle + sLabelNew + \" Reactions Playlist - \" + playlist + // eslint-disable-next-line\n      \"<br>\" + \"<br>\" + \"#\" + noSpaceTitle + \"reaction \" + \"#\" + noSpaceTitle + sLabelNew.replace(/\\s/g, '') + epLabelNew.replace(/\\s/g, '') + \" \" + // eslint-disable-next-line\n      this.state.youTubeHashtag + // eslint-disable-next-line\n      \"<br>\" + \"<br>\" + this.state.youTubeFollow + \":\" + // eslint-disable-next-line\n      \"<br>\" + this.state.youTubeSocial[0].id + \": \" + this.state.youTubeSocial[0].url + // eslint-disable-next-line\n      \"<br>\" + this.state.youTubeSocial[1].id + \": \" + this.state.youTubeSocial[1].url + // eslint-disable-next-line\n      \"<br>\" + this.state.youTubeSocial[2].id + \": \" + this.state.youTubeSocial[2].url + // eslint-disable-next-line\n      \"<br>\" + this.state.youTubeSocial[3].id + \": \" + this.state.youTubeSocial[3].url + // eslint-disable-next-line\n      \"<br>\" + this.state.youTubeSocial[4].id + \": \" + this.state.youTubeSocial[4].url + // eslint-disable-next-line\n      youtubeTimecodeNew + // eslint-disable-next-line\n      youtubeTimecode\n    )\n  }\n\n  youtubeTag = () => {\n    let title = document.getElementById(\"title\").value.toLowerCase();\n    let altTitle = document.getElementById(\"altTitle\").value.toLowerCase();\n    let youtubeTitle = document.getElementById(\"youtubeTitle\").value;\n    let episode = document.getElementById(\"episode\").value;\n    let altEpisode = document.getElementById(\"altEpisode\").value;\n    let youtubeTimecode = document.getElementById(\"youtubeTimecode\").value;\n    let season = document.getElementById(\"season\").value;\n    let playlist = document.getElementById(\"playlist\").value;\n    let displayTags = document.getElementById(\"displayTags\");\n    let displayDesc = document.getElementById(\"displayDescription\");\n    let noSeason = \"\";\n\n    displayTags.addEventListener('click', async event => {\n      if (!navigator.clipboard) {\n        // Clipboard API not available\n        return\n      }\n      const text = event.target.innerText\n      try {\n        await navigator.clipboard.writeText(text)\n        event.target.textContent = 'Copied to clipboard'\n      } catch (err) {\n        console.error('Failed to copy!', err)\n      }\n    })\n\n    displayDesc.addEventListener('click', async event => {\n      if (!navigator.clipboard) {\n        // Clipboard API not available\n        return\n      }\n      const text = event.target.innerText\n      try {\n        await navigator.clipboard.writeText(text)\n        event.target.textContent = 'Copied to clipboard'\n      } catch (err) {\n        console.error('Failed to copy!', err)\n      }\n    })\n\n    return (\n      displayTags.innerHTML = (this.reactionTags(title, season, episode, this.state.episodeLabel, this.state.seasonLabel) + \", \" +\n        this.reactionTags(title, noSeason, altEpisode, this.state.episodeLabel, this.state.seasonLabel) + \", \" +\n        this.reactionTags(altTitle, season, episode, this.state.episodeLabel, this.state.seasonLabel) + \", \" +\n        this.reactionTags(altTitle, noSeason, altEpisode, this.state.episodeLabel, this.state.seasonLabel)),\n      displayDesc.innerHTML = this.description(title, youtubeTitle, episode, youtubeTimecode, season, playlist, this.state.episodeLabel, this.state.seasonLabel)\n    )\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"header\">\n          <div className=\"header-title\">YouTube Metadata Creator</div>\n          <div className=\"header-subtitle\">Created by <a href=\"https://www.samsonloftin.com/\">Post-TimeSkip Sam</a></div>\n          <div className=\"header-nav\">\n            <div className=\"header-links\" onClick={() => this.updatePage(\"Yes\")}>Anime</div>\n            <div className=\"header-links\" onClick={() => this.updatePage(\"No\")}>Manga</div>\n            {/* <div className=\"header-links\" onClick={() => this.updatePage(\"Games\")}>Games</div>*/}\n          </div>\n        </div>\n\n        <div className=\"form-container\">\n\n          {/* TITLE OF MEDIA */}\n          <div className=\"form-section\">\n            <label htmlFor=\"title\">{this.state.mediaTitle} Title</label>\n            <input type=\"text\" id=\"title\" name=\"title\" />\n          </div>\n\n\n          {/* ALTERNATIVE TITLE OF MEDIA */}\n          <div className=\"form-section\">\n            <label htmlFor=\"altTitle\">Alternative {this.state.mediaTitle} Title</label>\n            <input type=\"text\" id=\"altTitle\" name=\"altTitle\" />\n          </div>\n\n          {/* YOUTUBE TITLE */}\n          <div className=\"form-section\">\n            <label htmlFor=\"youtubeTitle\">YouTube Title</label>\n            <input type=\"text\" id=\"youtubeTitle\" name=\"youtubeTitle\" />\n          </div>\n\n          {/* Episode TITLE */}\n          <div className=\"form-three-section\">\n            <div className=\"form-section-three\">\n              <label htmlFor=\"episode\">{this.state.episodeLabel} #</label>\n              <input type=\"number\" id=\"episode\" name=\"episode\" min=\"0\" />\n            </div>\n\n            {/* ALT EP TITLE */}\n            <div className=\"form-section-three\">\n              <label htmlFor=\"altEpisode\">Alt {this.state.episodeLabel} #</label>\n              <input type=\"number\" id=\"altEpisode\" name=\"altEpisode\" min=\"0\" />\n            </div>\n\n            {/* SEASON TITLE */}\n            <div className=\"form-section-three\">\n              <label htmlFor=\"season\">{this.state.seasonLabel} #</label>\n              <input type=\"number\" id=\"season\" name=\"season\" min=\"0\" />\n            </div>\n\n            {/* Playlist TITLE */}\n            <div className=\"form-section-three\">\n              <label htmlFor=\"playlist\">YouTube Playlist</label>\n              <input type=\"text\" id=\"playlist\" name=\"playlist\" min=\"0\" />\n            </div>\n\n            {/* TIMECODE TITLE */}\n            <div className=\"form-section\">\n              <label htmlFor=\"youtubeTimecode\">Timecodes</label>\n              <textarea cols=\"50\" rows=\"5\" id=\"youtubeTimecode\" name=\"youtubeTimecode\" />\n            </div>\n\n            <div className=\"form-section\" id=\"form-submit\">\n              <input className=\"submit\" type=\"button\" onClick={() => this.youtubeTag()} value=\"Submit\" />\n            </div>\n\n          </div>\n        </div>\n\n        <div className=\"form-container\">\n          {/* DESCRIPTION TITLE */}\n          <div className=\"form-section\">\n            <label>Description (Click Below to Copy)</label>\n            <div className=\"display\" id=\"displayDescription\" />\n          </div>\n\n          {/* TAGS TITLE */}\n          <div className=\"form-section\">\n            <label>Tags (Click Below to Copy)</label>\n            <div className=\"display\" id=\"displayTags\" />\n          </div>\n        </div>\n\n\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter basename='/'>\n    <App />\n  </BrowserRouter>, document.getElementById('root'));"],"sourceRoot":""}